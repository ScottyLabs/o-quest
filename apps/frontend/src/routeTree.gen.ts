/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AboutImport } from "./routes/about";
import { Route as ChallengesImport } from "./routes/challenges";
import { Route as IndexImport } from "./routes/index";
import { Route as LeaderboardImport } from "./routes/leaderboard";
import { Route as TerrierTradeImport } from "./routes/terrier-trade";

// Create/Update Routes

const TerrierTradeRoute = TerrierTradeImport.update({
    id: "/terrier-trade",
    path: "/terrier-trade",
    getParentRoute: () => rootRoute,
} as any);

const LeaderboardRoute = LeaderboardImport.update({
    id: "/leaderboard",
    path: "/leaderboard",
    getParentRoute: () => rootRoute,
} as any);

const ChallengesRoute = ChallengesImport.update({
    id: "/challenges",
    path: "/challenges",
    getParentRoute: () => rootRoute,
} as any);

const AboutRoute = AboutImport.update({
    id: "/about",
    path: "/about",
    getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
    interface FileRoutesByPath {
        "/": {
            id: "/";
            path: "/";
            fullPath: "/";
            preLoaderRoute: typeof IndexImport;
            parentRoute: typeof rootRoute;
        };
        "/about": {
            id: "/about";
            path: "/about";
            fullPath: "/about";
            preLoaderRoute: typeof AboutImport;
            parentRoute: typeof rootRoute;
        };
        "/challenges": {
            id: "/challenges";
            path: "/challenges";
            fullPath: "/challenges";
            preLoaderRoute: typeof ChallengesImport;
            parentRoute: typeof rootRoute;
        };
        "/leaderboard": {
            id: "/leaderboard";
            path: "/leaderboard";
            fullPath: "/leaderboard";
            preLoaderRoute: typeof LeaderboardImport;
            parentRoute: typeof rootRoute;
        };
        "/terrier-trade": {
            id: "/terrier-trade";
            path: "/terrier-trade";
            fullPath: "/terrier-trade";
            preLoaderRoute: typeof TerrierTradeImport;
            parentRoute: typeof rootRoute;
        };
    }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
    "/": typeof IndexRoute;
    "/about": typeof AboutRoute;
    "/challenges": typeof ChallengesRoute;
    "/leaderboard": typeof LeaderboardRoute;
    "/terrier-trade": typeof TerrierTradeRoute;
}

export interface FileRoutesByTo {
    "/": typeof IndexRoute;
    "/about": typeof AboutRoute;
    "/challenges": typeof ChallengesRoute;
    "/leaderboard": typeof LeaderboardRoute;
    "/terrier-trade": typeof TerrierTradeRoute;
}

export interface FileRoutesById {
    __root__: typeof rootRoute;
    "/": typeof IndexRoute;
    "/about": typeof AboutRoute;
    "/challenges": typeof ChallengesRoute;
    "/leaderboard": typeof LeaderboardRoute;
    "/terrier-trade": typeof TerrierTradeRoute;
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths:
        | "/"
        | "/about"
        | "/challenges"
        | "/leaderboard"
        | "/terrier-trade";
    fileRoutesByTo: FileRoutesByTo;
    to: "/" | "/about" | "/challenges" | "/leaderboard" | "/terrier-trade";
    id:
        | "__root__"
        | "/"
        | "/about"
        | "/challenges"
        | "/leaderboard"
        | "/terrier-trade";
    fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
    IndexRoute: typeof IndexRoute;
    AboutRoute: typeof AboutRoute;
    ChallengesRoute: typeof ChallengesRoute;
    LeaderboardRoute: typeof LeaderboardRoute;
    TerrierTradeRoute: typeof TerrierTradeRoute;
}

const rootRouteChildren: RootRouteChildren = {
    IndexRoute: IndexRoute,
    AboutRoute: AboutRoute,
    ChallengesRoute: ChallengesRoute,
    LeaderboardRoute: LeaderboardRoute,
    TerrierTradeRoute: TerrierTradeRoute,
};

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/challenges",
        "/leaderboard",
        "/terrier-trade"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/challenges": {
      "filePath": "challenges.tsx"
    },
    "/leaderboard": {
      "filePath": "leaderboard.tsx"
    },
    "/terrier-trade": {
      "filePath": "terrier-trade.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
